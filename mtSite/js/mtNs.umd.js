(function(C,w){typeof exports=="object"&&typeof module<"u"?module.exports=w():typeof define=="function"&&define.amd?define(w):(C=typeof globalThis<"u"?globalThis:C||self,C.mtNs=w())})(this,function(){"use strict";const C="",w=b=>Uint8Array.from(atob(b),W=>W.charCodeAt(0)),ul=typeof window<"u"&&window.Blob&&new Blob([w(C)],{type:"text/javascript;charset=utf-8"});function Jl(b){let W;try{if(W=ul&&(window.URL||window.webkitURL).createObjectURL(ul),!W)throw"";const u=new Worker(W,{name:b==null?void 0:b.name});return u.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(W)}),u}catch{return new Worker("data:text/javascript;base64,"+C,{name:b==null?void 0:b.name})}finally{W&&(window.URL||window.webkitURL).revokeObjectURL(W)}}var B=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function zl(b){return b&&b.__esModule&&Object.prototype.hasOwnProperty.call(b,"default")?b.default:b}var al={exports:{}};(function(b){(function(){var W="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45",O=typeof process=="object"&&typeof process.versions=="object"&&process.versions.node&&!process.browser;if(O){var u=process.versions.node.toString().replace("v","");W="Nodejs/"+u+" (NodeOS) AppleWebKit/"+u+" (KHTML, like Gecko) Nodejs/"+u+" Nodejs/"+u}(function(Z){typeof window<"u"||(typeof window>"u"&&typeof B<"u"&&(B.navigator={userAgent:W,getUserMedia:function(){}},Z.window=B),typeof location>"u"&&(Z.location={protocol:"file:",href:"",hash:""}),typeof screen>"u"&&(Z.screen={width:0,height:0}))})(typeof B<"u"?B:window);var d=window.navigator;typeof d<"u"?(typeof d.webkitGetUserMedia<"u"&&(d.getUserMedia=d.webkitGetUserMedia),typeof d.mozGetUserMedia<"u"&&(d.getUserMedia=d.mozGetUserMedia)):d={getUserMedia:function(){},userAgent:W};var F=!!/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(d.userAgent||""),o=d.userAgent.indexOf("Edge")!==-1&&(!!d.msSaveOrOpenBlob||!!d.msSaveBlob),N=!!window.opera||d.userAgent.indexOf(" OPR/")>=0,U=d.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(d.userAgent),M=/^((?!chrome|android).)*safari/i.test(d.userAgent),Y=!!window.chrome&&!N,p=typeof document<"u"&&!!document.documentMode&&!o;function J(){d.appVersion;var Z=d.userAgent,G=d.appName,m=""+parseFloat(d.appVersion),X=parseInt(d.appVersion,10),c,V,z;if(N){G="Opera";try{m=d.userAgent.split("OPR/")[1].split(" ")[0],X=m.split(".")[0]}catch{m="0.0.0.0",X=0}}else p?(V=Z.indexOf("rv:"),V>0?m=Z.substring(V+3):(V=Z.indexOf("MSIE"),m=Z.substring(V+5)),G="IE"):Y?(V=Z.indexOf("Chrome"),G="Chrome",m=Z.substring(V+7)):M?Z.indexOf("CriOS")!==-1?(V=Z.indexOf("CriOS"),G="Chrome",m=Z.substring(V+6)):Z.indexOf("FxiOS")!==-1?(V=Z.indexOf("FxiOS"),G="Firefox",m=Z.substring(V+6)):(V=Z.indexOf("Safari"),G="Safari",m=Z.substring(V+7),(V=Z.indexOf("Version"))!==-1&&(m=Z.substring(V+8)),d.userAgent.indexOf("Version/")!==-1&&(m=d.userAgent.split("Version/")[1].split(" ")[0])):U?(V=Z.indexOf("Firefox"),G="Firefox",m=Z.substring(V+8)):(c=Z.lastIndexOf(" ")+1)<(V=Z.lastIndexOf("/"))&&(G=Z.substring(c,V),m=Z.substring(V+1),G.toLowerCase()===G.toUpperCase()&&(G=d.appName));return o&&(G="Edge",m=d.userAgent.split("Edge/")[1]),(z=m.search(/[; \)]/))!==-1&&(m=m.substring(0,z)),X=parseInt(""+m,10),isNaN(X)&&(m=""+parseFloat(d.appVersion),X=parseInt(d.appVersion,10)),{fullVersion:m,version:X,name:G,isPrivateBrowsing:!1}}function i(Z,G){var m=0,X=50,c=!1,V=window.setInterval(function(){Z()&&(window.clearInterval(V),G(c)),m++>X&&(window.clearInterval(V),c=!0,G(c))},10)}function E(Z){var G=Z.toLowerCase();if(G.indexOf("msie")===0&&G.indexOf("trident")===0)return!1;var m=/(?:msie|rv:)\s?([\d\.]+)/.exec(G);return!!(m&&parseInt(m[1],10)>=10)}function dl(Z){var G;try{if(window.webkitRequestFileSystem)window.webkitRequestFileSystem(window.TEMPORARY,1,function(){G=!1},function(X){G=!0});else if(window.indexedDB&&/Firefox/.test(window.navigator.userAgent)){var m;try{m=window.indexedDB.open("test"),m.onerror=function(){return!0}}catch{G=!0}typeof G>"u"&&i(function(){return m.readyState==="done"},function(c){c||(G=!m.result)})}else if(E(window.navigator.userAgent)){G=!1;try{window.indexedDB||(G=!0)}catch{G=!0}}else if(window.localStorage&&/Safari/.test(window.navigator.userAgent)){try{window.localStorage.setItem("test",1)}catch{G=!0}typeof G>"u"&&(G=!1,window.localStorage.removeItem("test"))}}catch{G=!1}i(function(){return typeof G<"u"},function(c){Z(G)})}var a={Android:function(){return d.userAgent.match(/Android/i)},BlackBerry:function(){return d.userAgent.match(/BlackBerry|BB10/i)},iOS:function(){return d.userAgent.match(/iPhone|iPad|iPod/i)},Opera:function(){return d.userAgent.match(/Opera Mini/i)},Windows:function(){return d.userAgent.match(/IEMobile/i)},any:function(){return a.Android()||a.BlackBerry()||a.iOS()||a.Opera()||a.Windows()},getOsName:function(){var Z="Unknown OS";return a.Android()&&(Z="Android"),a.BlackBerry()&&(Z="BlackBerry"),a.iOS()&&(Z="iOS"),a.Opera()&&(Z="Opera Mini"),a.Windows()&&(Z="Windows"),Z}};function cl(){for(var Z="-",G=d.appVersion,m=d.userAgent,X=Z,c=[{s:"Chrome OS",r:/CrOS/},{s:"Windows 10",r:/(Windows 10.0|Windows NT 10.0)/},{s:"Windows 8.1",r:/(Windows 8.1|Windows NT 6.3)/},{s:"Windows 8",r:/(Windows 8|Windows NT 6.2)/},{s:"Windows 7",r:/(Windows 7|Windows NT 6.1)/},{s:"Windows Vista",r:/Windows NT 6.0/},{s:"Windows Server 2003",r:/Windows NT 5.2/},{s:"Windows XP",r:/(Windows NT 5.1|Windows XP)/},{s:"Windows 2000",r:/(Windows NT 5.0|Windows 2000)/},{s:"Windows ME",r:/(Win 9x 4.90|Windows ME)/},{s:"Windows 98",r:/(Windows 98|Win98)/},{s:"Windows 95",r:/(Windows 95|Win95|Windows_95)/},{s:"Windows NT 4.0",r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{s:"Windows CE",r:/Windows CE/},{s:"Windows 3.11",r:/Win16/},{s:"Android",r:/Android/},{s:"Open BSD",r:/OpenBSD/},{s:"Sun OS",r:/SunOS/},{s:"Linux",r:/(Linux|X11)/},{s:"iOS",r:/(iPhone|iPad|iPod)/},{s:"Mac OS X",r:/Mac OS X/},{s:"Mac OS",r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{s:"QNX",r:/QNX/},{s:"UNIX",r:/UNIX/},{s:"BeOS",r:/BeOS/},{s:"OS/2",r:/OS\/2/},{s:"Search Bot",r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}],V=0,z;z=c[V];V++)if(z.r.test(m)){X=z.s;break}var n=Z;switch(/Windows/.test(X)&&(/Windows (.*)/.test(X)&&(n=/Windows (.*)/.exec(X)[1]),X="Windows"),X){case"Mac OS X":/Mac OS X (10[\.\_\d]+)/.test(m)&&(n=/Mac OS X (10[\.\_\d]+)/.exec(m)[1]);break;case"Android":/Android ([\.\_\d]+)/.test(m)&&(n=/Android ([\.\_\d]+)/.exec(m)[1]);break;case"iOS":/OS (\d+)_(\d+)_?(\d+)?/.test(m)&&(n=/OS (\d+)_(\d+)_?(\d+)?/.exec(G),n&&n.length>3&&(n=n[1]+"."+n[2]+"."+(n[3]|0)));break}return{osName:X,osVersion:n}}var R="Unknown OS",y="Unknown OS Version";function H(Z){Z=(Z||d.userAgent).toLowerCase();var G=Z.match(/android\s([0-9\.]*)/);return G?G[1]:!1}var Q=cl();Q&&Q.osName&&Q.osName!="-"?(R=Q.osName,y=Q.osVersion):a.any()&&(R=a.getOsName(),R=="Android"&&(y=H()));var O=typeof process=="object"&&typeof process.versions=="object"&&process.versions.node;R==="Unknown OS"&&O&&(R="Nodejs",y=process.versions.node.toString().replace("v",""));var I=!1,e=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(Z){typeof document>"u"||typeof document.createElement!="function"||(!I&&Z in document.createElement("canvas")&&(I=!0),!e&&Z in document.createElement("video")&&(e=!0))});var A=/^(192\.168\.|169\.254\.|10\.|172\.(1[6-9]|2\d|3[01]))/,Gl=/([0-9]{1,3}(\.[0-9]{1,3}){3})/,Nl=/[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/;function Ml(Z,G){if(l.isWebRTCSupported){var m=!0,X=!0;Il(function(c){c?c.match(A)?(m=!1,Z("Local: "+c,m,X)):(c.match(Nl)&&(X=!1),Z("Public: "+c,m,X)):Z()},G)}}function Il(Z,G){if(typeof document>"u"||typeof document.getElementById!="function")return;var m={},X=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection;if(!X){var c=document.getElementById("iframe");if(!c)return;var V=c.contentWindow;X=V.RTCPeerConnection||V.mozRTCPeerConnection||V.webkitRTCPeerConnection}if(!X)return;var z=null;l.browser==="Chrome"&&l.browser.version<58&&(z={optional:[{RtpDataChannels:!0}]});var n={iceServers:[{urls:"stun:stun.l.google.com:19302"}]},s=new X(n,z);G&&(s.addStream?s.addStream(G):s.addTrack&&G.getTracks()[0]&&s.addTrack(G.getTracks()[0],G));function Vl(h){if(!h){Z();return}var v=Gl.exec(h);if(v){var Wl=v[1],Ul=h.match(A),Ql=!0;m[Wl]===void 0&&Z(Wl,Ul,Ql),m[Wl]=!0}}if(s.onicecandidate=function(h){h.candidate&&h.candidate.candidate?Vl(h.candidate.candidate):Vl()},!G)try{s.createDataChannel("sctp",{})}catch{}l.isPromisesSupported?s.createOffer().then(function(h){s.setLocalDescription(h).then(ol)}):s.createOffer(function(h){s.setLocalDescription(h,ol,function(){})},function(){});function ol(){var h=s.localDescription.sdp.split(`
`);h.forEach(function(v){v&&v.indexOf("a=candidate:")===0&&Vl(v)})}}var T=[],t=[],S=[],x=[];d.mediaDevices&&d.mediaDevices.enumerateDevices&&(d.enumerateDevices=function(Z){var G=d.mediaDevices.enumerateDevices();G&&G.then?d.mediaDevices.enumerateDevices().then(Z).catch(function(){Z([])}):Z([])});var ml=!1;(typeof MediaStreamTrack<"u"&&"getSources"in MediaStreamTrack||d.mediaDevices&&d.mediaDevices.enumerateDevices)&&(ml=!0);var q=!1,_=!1,$=!1,P=!1,f=!1;function tl(Z){if(!ml){Z&&Z();return}if(!d.enumerateDevices&&window.MediaStreamTrack&&window.MediaStreamTrack.getSources&&(d.enumerateDevices=window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack)),!d.enumerateDevices&&d.enumerateDevices&&(d.enumerateDevices=d.enumerateDevices.bind(d)),!d.enumerateDevices){Z&&Z();return}T=[],t=[],S=[],x=[],q=!1,_=!1,$=!1,P=!1,f=!1;var G={};d.enumerateDevices(function(m){T=[],t=[],S=[],x=[],m.forEach(function(X){var c={};for(var V in X)try{typeof X[V]!="function"&&(c[V]=X[V])}catch{}G[c.deviceId+c.label+c.kind]||(c.kind==="audio"&&(c.kind="audioinput"),c.kind==="video"&&(c.kind="videoinput"),c.deviceId||(c.deviceId=c.id),c.id||(c.id=c.deviceId),c.label?(c.kind==="videoinput"&&!f&&(f=!0),c.kind==="audioinput"&&!P&&(P=!0)):(c.isCustomLabel=!0,c.kind==="videoinput"?c.label="Camera "+(x.length+1):c.kind==="audioinput"?c.label="Microphone "+(t.length+1):c.kind==="audiooutput"?c.label="Speaker "+(S.length+1):c.label="Please invoke getUserMedia once.",typeof l<"u"&&l.browser.isChrome&&l.browser.version>=46&&!/^(https:|chrome-extension:)$/g.test(location.protocol||"")&&typeof document<"u"&&typeof document.domain=="string"&&document.domain.search&&document.domain.search(/localhost|127.0./g)===-1&&(c.label="HTTPs is required to get label of this "+c.kind+" device.")),c.kind==="audioinput"&&(q=!0,t.indexOf(c)===-1&&t.push(c)),c.kind==="audiooutput"&&(_=!0,S.indexOf(c)===-1&&S.push(c)),c.kind==="videoinput"&&($=!0,x.indexOf(c)===-1&&x.push(c)),T.push(c),G[c.deviceId+c.label+c.kind]=c)}),typeof l<"u"&&(l.MediaDevices=T,l.hasMicrophone=q,l.hasSpeakers=_,l.hasWebcam=$,l.isWebsiteHasWebcamPermissions=f,l.isWebsiteHasMicrophonePermissions=P,l.audioInputDevices=t,l.audioOutputDevices=S,l.videoInputDevices=x),Z&&Z()})}var l=window.DetectRTC||{};l.browser=J(),dl(function(Z){l.browser.isPrivateBrowsing=!!Z}),l.browser["is"+l.browser.name]=!0,l.osName=R,l.osVersion=y,typeof process=="object"&&typeof process.versions=="object"&&process.versions["node-webkit"];var bl=!1;["RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","RTCIceGatherer"].forEach(function(Z){bl||Z in window&&(bl=!0)}),l.isWebRTCSupported=bl,l.isORTCSupported=typeof RTCIceGatherer<"u";var K=!1;if((l.browser.isChrome&&l.browser.version>=35||l.browser.isFirefox&&l.browser.version>=34||l.browser.isEdge&&l.browser.version>=17||l.osName==="Android"&&l.browser.isChrome)&&(K=!0),(d.getDisplayMedia||d.mediaDevices&&d.mediaDevices.getDisplayMedia)&&(K=!0),!/^(https:|chrome-extension:)$/g.test(location.protocol||"")){var Sl=typeof document<"u"&&typeof document.domain=="string"&&document.domain.search&&document.domain.search(/localhost|127.0./g)===-1;(Sl&&(l.browser.isChrome||l.browser.isEdge||l.browser.isOpera)||l.browser.isFirefox)&&(K=!1)}l.isScreenCapturingSupported=K;var r={isSupported:!1,isCreateMediaStreamSourceSupported:!1};["AudioContext","webkitAudioContext","mozAudioContext","msAudioContext"].forEach(function(Z){r.isSupported||Z in window&&(r.isSupported=!0,window[Z]&&"createMediaStreamSource"in window[Z].prototype&&(r.isCreateMediaStreamSourceSupported=!0))}),l.isAudioContextSupported=r.isSupported,l.isCreateMediaStreamSourceSupported=r.isCreateMediaStreamSourceSupported;var pl=!1;l.browser.isChrome&&l.browser.version>31&&(pl=!0),l.isRtpDataChannelsSupported=pl;var ll=!1;(l.browser.isFirefox&&l.browser.version>28||l.browser.isChrome&&l.browser.version>25||l.browser.isOpera&&l.browser.version>=11)&&(ll=!0),l.isSctpDataChannelsSupported=ll,l.isMobileDevice=F;var j=!1;(d.getUserMedia||d.mediaDevices&&d.mediaDevices.getUserMedia)&&(j=!0),l.browser.isChrome&&l.browser.version>=46&&!/^(https:|chrome-extension:)$/g.test(location.protocol||"")&&typeof document<"u"&&typeof document.domain=="string"&&document.domain.search&&document.domain.search(/localhost|127.0./g)===-1&&(j="Requires HTTPs"),l.osName==="Nodejs"&&(j=!1),l.isGetUserMediaSupported=j;var nl="";if(screen.width){var xl=screen.width?screen.width:"",Cl=screen.height?screen.height:"";nl+=""+xl+" x "+Cl}l.displayResolution=nl;function kl(Z,G){function m(c,V){return V==0?c:m(V,c%V)}var X=m(Z,G);return Z/X/(G/X)}l.displayAspectRatio=kl(screen.width,screen.height).toFixed(2),l.isCanvasSupportsStreamCapturing=I,l.isVideoSupportsStreamCapturing=e,l.browser.name=="Chrome"&&l.browser.version>=53&&(l.isCanvasSupportsStreamCapturing||(l.isCanvasSupportsStreamCapturing="Requires chrome flag: enable-experimental-web-platform-features"),l.isVideoSupportsStreamCapturing||(l.isVideoSupportsStreamCapturing="Requires chrome flag: enable-experimental-web-platform-features")),l.DetectLocalIPAddress=Ml,l.isWebSocketsSupported="WebSocket"in window&&window.WebSocket.CLOSING===2,l.isWebSocketsBlocked=!l.isWebSocketsSupported,l.osName==="Nodejs"&&(l.isWebSocketsSupported=!0,l.isWebSocketsBlocked=!1),l.checkWebSocketsSupport=function(Z){Z=Z||function(){};try{var G,m=new WebSocket("wss://echo.websocket.org:443/");m.onopen=function(){l.isWebSocketsBlocked=!1,G=new Date().getTime(),m.send("ping")},m.onmessage=function(){l.WebsocketLatency=new Date().getTime()-G+"ms",Z(),m.close(),m=null},m.onerror=function(){l.isWebSocketsBlocked=!0,Z()}}catch{l.isWebSocketsBlocked=!0,Z()}},l.load=function(Z){Z=Z||function(){},tl(Z)},typeof T<"u"?l.MediaDevices=T:l.MediaDevices=[],l.hasMicrophone=q,l.hasSpeakers=_,l.hasWebcam=$,l.isWebsiteHasWebcamPermissions=f,l.isWebsiteHasMicrophonePermissions=P,l.audioInputDevices=t,l.audioOutputDevices=S,l.videoInputDevices=x;var hl=!1;typeof document<"u"&&typeof document.createElement=="function"&&"setSinkId"in document.createElement("video")&&(hl=!0),l.isSetSinkIdSupported=hl;var Xl=!1;l.browser.isFirefox&&typeof mozRTCPeerConnection<"u"?"getSenders"in mozRTCPeerConnection.prototype&&(Xl=!0):l.browser.isChrome&&typeof webkitRTCPeerConnection<"u"&&"getSenders"in webkitRTCPeerConnection.prototype&&(Xl=!0),l.isRTPSenderReplaceTracksSupported=Xl;var il=!1;l.browser.isFirefox&&l.browser.version>38&&(il=!0),l.isRemoteStreamProcessingSupported=il;var Ll=!1;typeof MediaStreamTrack<"u"&&"applyConstraints"in MediaStreamTrack.prototype&&(Ll=!0),l.isApplyConstraintsSupported=Ll;var Yl=!1;l.browser.isFirefox&&l.browser.version>=43&&(Yl=!0),l.isMultiMonitorScreenCapturingSupported=Yl,l.isPromisesSupported="Promise"in window,l.version="1.4.1",typeof l>"u"&&(window.DetectRTC={});var D=window.MediaStream;typeof D>"u"&&typeof webkitMediaStream<"u"&&(D=webkitMediaStream),typeof D<"u"&&typeof D=="function"?l.MediaStream=Object.keys(D.prototype):l.MediaStream=!1,typeof MediaStreamTrack<"u"?l.MediaStreamTrack=Object.keys(MediaStreamTrack.prototype):l.MediaStreamTrack=!1;var sl=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection;typeof sl<"u"?l.RTCPeerConnection=Object.keys(sl.prototype):l.RTCPeerConnection=!1,window.DetectRTC=l,b.exports=l})()})(al);var Fl=al.exports;const g=zl(Fl),k={base64ToString:b=>b?new TextDecoder().decode(k.base64ToBytes(b)):"",base64ToBytes:b=>{const W=atob(b);return Uint8Array.from(W,u=>u.codePointAt(0))},bytesToBase64:b=>{const W=Array.from(b,u=>String.fromCodePoint(u)).join("");return btoa(W)},getUrlEncoded:function(b){return Object.keys(b).map(W=>encodeURIComponent(W)+"="+encodeURIComponent(b[W])).join("&")},hms:(b,W=[3600,60])=>W.reduceRight((u,d)=>F=>[Math.floor(F/d)].concat(u(F%d)),u=>[u])(b).map(u=>u.toString().padStart(2,"0")).join(":"),createNode:b=>{const{tag:W="div",id:u,innerHTML:d,title:F,className:o,parentNode:N,childNode:U,events:M,style:Y}=b||{},p=document.createElement(W);return u&&(p.id=u),Y&&(p.style=Y),o&&(p.className=o),d&&(p.innerHTML=d),F&&(p.title=F),M&&M.forEach(({type:J,handleEvent:i})=>{L.DomEvent.on(p,J,i)}),U&&p.appendChild(U),N&&N.appendChild(p),p},delay:b=>new Promise(W=>{const u=window.setTimeout(()=>{window.clearTimeout(u),W({})},b||1e3)}),log_error:b=>{console.trace("["+new Date().toLocaleTimeString()+"] "+k.gTxt(b))},_detectRTC:void 0,detectRTC:()=>new Promise(b=>{g.load(()=>{b(g),k._detectRTC=g})}),stopTracks:b=>{b&&b.getTracks().forEach(W=>{W.stop()})}};new Promise(b=>{g.load(()=>{b(g)})});const Zl={autoGainControl:!1,echoCancellation:!1,noiseSuppression:!1},Rl="Не найдены медиа устройства",Hl=async(b={})=>{const W={status:"off"};if(!MediaRecorder.isTypeSupported("audio/webm"))return{...W,errorMessage:Rl};const{uuid:u=4,nick:d="guest",url:F="//127.0.0.1/cvideo",stateInfo:o,timeLimit:N=3*60}=b,U=["start","pause","resume","stop","error","dataavailable"],M=await k.detectRTC();let Y;if(M.hasWebcam)Y=await navigator.mediaDevices.getUserMedia({video:!0,audio:Zl});else if(M.hasMicrophone){const R=await navigator.mediaDevices.getDisplayMedia({video:{mediaSource:"screen"},audio:Zl}),H=[...(await navigator.mediaDevices.getUserMedia({video:!1,audio:Zl})).getAudioTracks(),...R.getVideoTracks()];Y=new MediaStream(H)}else return{...W,errorMessage:Rl};o({type:"media",stream:Y});let p="video/webm";navigator.userAgent.indexOf("Firefox")===-1&&(p+=";codecs=vp8");let J=0,i;const E=()=>{i&&clearInterval(i),i=setInterval(()=>{J++,o({type:"recording",timer:J}),J>N&&(clearInterval(i),a.stop())},1e3)},dl=async R=>{let y=R.slice(0,R.size,"video/webm");k.stopTracks(Y);const H=new Date,I=`${d}_${H.toLocaleDateString()}_${H.toLocaleTimeString()}`.replace(/[\/\. :]/g,"_")+".webm",e=new FormData;e.append("uuid",u),e.append("name",I),e.append("rawdata",y,I);const A=await fetch(F,{method:"POST",body:e}).then(Gl=>Gl.json());return{date:H,fileName:I,...A}},a=new MediaRecorder(Y,{mimeType:p}),cl=R=>{const{type:y}=R;if(y==="error")console.warn(R);else if(y==="pause"&&i)clearInterval(i);else if(y==="stop")i&&clearInterval(i);else if(y==="resume")E();else if(y==="start")J=0,E();else if(y==="dataavailable"){dl(R.data).then(H=>{o({type:y,mimeType:p,timer:J,...H})});return}o({type:y,timer:J})};return U.forEach(R=>a.addEventListener(R,cl)),{...W,status:"ok",state:()=>a.state,start:()=>{a.state==="inactive"&&a.start()},pause:()=>{a.pause()},resume:()=>{a.resume()},stop:()=>{a.stop(),k.stopTracks(Y)}}},el=new Jl,Kl=new BroadcastChannel("channel_MtNs"),yl={worker:el,bcc:Kl,Mrecorder:Hl};return self.mtNs=yl,yl});
